worker_processes  1;

error_log /var/log/nginx/error.log info;

events {
    worker_connections  1024;
}

stream {
    # define all http/ws endpoints
    upstream browserendpoint {
        hash $remote_addr consistent; #ensure sticky session between long-polling and ws
        server deepstream-a:6020; #load balance connections between these two
        server deepstream-b:6020; #add more as required
    }

    server {
        listen 6040; #external browser port
        proxy_pass browserendpoint;
    }

    server {
        listen 8040 ssl; #external browser port
        proxy_pass browserendpoint;

        # SSL Termination, comment this section if you don't
        # want to use HTTPS/WSS (don't forget to remove the ssl after listen)
        ssl_certificate         /etc/ssl/certs/dummy.crt;
        ssl_certificate_key     /etc/ssl/certs/dummy.key;
        ssl_protocols           TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers             HIGH:!aNULL:!MD5;
        ssl_session_cache       shared:SSL:20m;
        ssl_session_timeout     4h;
        ssl_handshake_timeout   30s;
    }

     # define all tcp endpoints
    upstream tcpendpoint {
        hash $remote_addr consistent;
        server deepstream-a:6021; #load balance connections between these two
        server deepstream-b:6021; #add more as required
    }

    server {
        listen 6041; #external tcp port
        proxy_pass tcpendpoint;
    }

    server {
        listen 8041 ssl; #external tcp port
        proxy_pass tcpendpoint;

        # SSL Termination, comment this section if you don't
        # want to use HTTPS/WSS
        ssl_certificate         /etc/ssl/certs/dummy.crt;
        ssl_certificate_key     /etc/ssl/certs/dummy.key;
        ssl_protocols           TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers             HIGH:!aNULL:!MD5;
        ssl_session_cache       shared:SSL:20m;
        ssl_session_timeout     4h;
        ssl_handshake_timeout   30s;
    }
}